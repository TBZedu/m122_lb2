#!/usr/bin/env bash

log() {
    local RED='\033[0;31m'
    local YEL='\033[1;33m'
    local WHI='\033[1;37m'
    local CYA='\033[0;36m'
    local BLU='\033[0;34m'
    local NC='\033[0m'
    DATE=$(date '+%Y.%m.%d %H:%M:%S')
    LEVEL=$1
    shift # Shift all parameters n+1, so that we can echo all further
          # parameters without echoing the log level (which was stored in $1)
    case $LEVEL in
        D)
            case $LOGLEVEL in
                D) echo -e "$DATE:${CYA}DEBUG${NC}:$*" | tee -a $LOGFILE ;;
            esac
            ;;
        I)
            case $LOGLEVEL in
                D|I) echo -e "$DATE:${WHI}INFO${NC}:$*" | tee -a $LOGFILE ;;
            esac
            ;;
        W)
            case $LOGLEVEL in
                D|I|W) echo -e "$DATE:${YEL}WARNING${NC}:$*" | tee -a $LOGFILE ;;
            esac
            ;;
        E) echo -e "$DATE:${RED}ERROR${NC}:$*" | tee -a $LOGFILE ;;
        *) echo -e "$DATE:${BLU}UNKNOWN${NC}:$*" | tee -a $LOGFILE ;;
    esac
}

load_config() {
    if [ -r "$ETCDIR/git-tools.env" ]; then
        . "$ETCDIR/git-tools.env"
        log D "config loaded from ETCDIR" $(realpath $ETCDIR)
    elif [ -r "$CWD/git-tools.env" ]; then
        . "$CWD/git-tools.env"
        log D "config loaded from CWD" $CWD
    elif [ -r "$XDG_CONFIG_HOME/git-tools.env" ]; then
        . "$XDG_CONFIG_HOME/git-tools.env"
        log D "config loaded from XDG_CONFIG_HOME" $XDG_CONFIG_HOME
    elif [ -r "$HOME/.config/git-tools/git-tools.env" ]; then
        . "$HOME/.config/git-tools/git-tools.env"
        log D "config loaded from HOME/.config/git-tools"
    else
        log D "no config found, using env vars or default values"
    fi
}
